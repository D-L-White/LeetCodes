class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        // initialize row check
        int row = -1;
        // iterate through matrix rows
        for (int i = 0; i < matrix.size(); i++) {
            // find the row it is within and break out (no need to search through all if found)
            if (matrix[i][0] <= target && matrix[i][matrix[i].size()-1] >= target) {
                row = i;
                break;
            }
        }
        
        // no row contained it
        if (row == -1){
            return false;
        }
        
        // check the row it could be in for the target
        for (int i = 0; i < matrix[row].size(); i++) {
            if (matrix[row][i] == target) {
                return true;
            }
        }
        
        // never found
        return false;
    }
};
