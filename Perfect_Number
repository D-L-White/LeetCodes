class Solution {
public:
    bool checkPerfectNumber(int num) {
        // can only be a positive number
        if (num <= 0) {
            return false;
        }
        
        // rolling sum of all integers that are divisors of num
        int sum = 0;
        
        // loop through all numbers below square root of num
        for(int i = 1; i * i <= num; i++) {
            // if it's a divisor, add to the sum
            if (num % i == 0) {
                sum += i;
                // get inverse from above square root
                if (i * i != num) {
                    sum += num / i;
                }
            }
        }
        // sum - num and num must be equal for it to be true
        return sum - num == num;
    }
};
