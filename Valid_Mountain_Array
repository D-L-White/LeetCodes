class Solution {
public:
    bool validMountainArray(vector<int>& arr) {
        // ensure array large enough for a mountain
        if (arr.size() < 3) {
            return false;
        }

        // initialize itterator
        int i = 0;
        
        // walk up mountain until the peak (or potential plateau)
        while (i+1 < arr.size() && arr[i] < arr[i+1]) {
            i++;
        }
        
        // check to ensure peak or plateau not at start or end
        if (i == 0 || i == arr.size()-1) {
            return false;
        }
        
        // walk down the mountain until no longer going "downhill"
        while (i+1 < arr.size() && arr[i] > arr[i+1]) {
            i++;
        }
        
        // check to make sure reached end of mountain, else it's not a mountain
        return i == arr.size()-1;
    }
};
