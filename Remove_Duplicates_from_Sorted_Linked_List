/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        // check for single link or empty lists
        if (head == NULL || head->next == NULL) {
            return head;
        }
        
        ListNode* checking = head;
        
        // loop along list
        while (checking->next != NULL) {
            // set current link to skip next if duplicate value within
            if (checking->val == checking->next->val) {
                checking->next = checking->next->next;
            }
            // only move forward if not duplicate
            else {
              checking = checking->next;
            }
        }
        
        return head;
    }
};
