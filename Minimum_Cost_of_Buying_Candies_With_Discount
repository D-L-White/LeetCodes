class Solution {
public:
    int minimumCost(vector<int>& cost) {
        sort(cost.begin(), cost.end());
        
        int sumCost = 0;
        
        // buy two most expensive and take then third most expensive for free
        while (cost.size() >= 3) {
            sumCost += cost[cost.size()-1];
            cost.pop_back();
            sumCost += cost[cost.size()-1];
            cost.pop_back();
            cost.pop_back();
        }
        
        // buy any residual that don't have a free one
        while (cost.size() > 0) {
            sumCost += cost[cost.size()-1];
            cost.pop_back();
        }
        
     
        return sumCost;
    }
};
