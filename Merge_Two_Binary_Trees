/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {
        // no root 1, hand back root 2
        if (root1 == NULL) {
            return root2;
        }
        // no root 2, hand back root 1
        if(root2 == NULL) {
            return root1;
        }
        
        // combine the values at this node
        root1->val+=root2->val;
        
        // recursively get merged trees from left and right
        root1->left = mergeTrees(root1->left, root2->left);
        root1->right = mergeTrees(root1->right, root2->right);
        
        // return up the merged nodes
        return root1;
    }
};
