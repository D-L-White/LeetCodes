/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int l1val;
        int l2val;
        int carry = 0;
        
        ListNode sumHead = new ListNode(0);
        ListNode sumWalker = sumHead;
        
        
        while(true) {
            // set values for use
            l1val = 0;
            l2val = 0;
            if (l1 != null) {
                l1val = l1.val;
                l1 = l1.next;
            }
            if (l2 != null) {
                l2val = l2.val;
                l2 = l2.next;
            }
            
            // find sum and if carry needed
            int nodeSum = carry + l1val + l2val;
            carry = nodeSum / 10;
            
            sumWalker.next = new ListNode(nodeSum % 10, null);
            sumWalker = sumWalker.next;
            
            if (carry == 0 && l1 == null && l2 == null) {
                break;
            }
        }
        
        return sumHead.next;
    }
}
