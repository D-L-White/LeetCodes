/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        // check if reached end of the line
        if (root == NULL) {
            return 0;
        } 
        else {
            // recurse down left and right paths until end of line
            int leftDepth = maxDepth(root->left);
            int rightDepth = maxDepth(root->right);
            
            // return only largest of the two (base + x where x == number of recursive calls that added 1)
            if (leftDepth > rightDepth) {
                return (leftDepth + 1);
            }
            else {
                return (rightDepth + 1);
            }
        }
    }
};
